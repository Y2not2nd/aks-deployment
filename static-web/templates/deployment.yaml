apiVersion: apps/v1
kind: Deployment
metadata:
  name: static-web
  labels:
    app: static-web
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: static-web
  template:
    metadata:
      labels:
        app: static-web
    spec:
      imagePullSecrets:
        - name: acr-secret
      serviceAccountName: {{ include "static-web.serviceAccountName" . }}
      securityContext:
        fsGroup: 101
      containers:
        - name: static-web
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-pid
              mountPath: /var/run
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-pid
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: nginx-config
